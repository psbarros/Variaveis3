== TEST (2019-03-21 20:42:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num1 = int(input("Digite o primeiro inteiro:"))
num2 = int(input("Digite o segundo inteiro:"))
num3 = int(input("Digite o terceiro inteiro:"))
print(min(num1,num2,num3),(num1+num2+num3)-(min(num1,num2,num3)-max(num1,num2,num3),max(num1,num2,num3) )
			  
-- ERROR:
File "XXXX", line 9
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:43:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num1 = int(input("Digite o primeiro inteiro:"))
num2 = int(input("Digite o segundo inteiro:"))
num3 = int(input("Digite o terceiro inteiro:"))
print(min(num1,num2,num3))
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:44:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num1 = int(input("Digite o primeiro inteiro:"))
num2 = int(input("Digite o segundo inteiro:"))
num3 = int(input("Digite o terceiro inteiro:"))
print(min(num1,num2,num3))
print(max(num1,num2,num3))
print((num1+num2+num3)-max(num1,num2,num3)-min(num1,num2,num3))
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:44:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num1 = int(input("Digite o primeiro inteiro:"))
num2 = int(input("Digite o segundo inteiro:"))
num3 = int(input("Digite o terceiro inteiro:"))
print(min(num1,num2,num3))
print(max(num1,num2,num3))

-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:45:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num1 = int(input("Digite o primeiro inteiro:"))
num2 = int(input("Digite o segundo inteiro:"))
num3 = int(input("Digite o terceiro inteiro:"))
print(min(num1,num2,num3))
print((num1+num2+num3)-min(num1+num2+num3)-max(um1+num2+num3))
print(max(num1,num2,num3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print((num1+num2+num3)-min(num1+num2+num3)-max(um1+num2+num3))
TypeError: 'int' object is not iterable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:46:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num1 = int(input("Digite o primeiro inteiro:"))
num2 = int(input("Digite o segundo inteiro:"))
num3 = int(input("Digite o terceiro inteiro:"))
print(min(num1,num2,num3))
print((num1+num2+num3)-min(num1,num2,num3)-max(num1,num2,num3))
print(max(num1,num2,num3))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 20:46:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num1 = int(input("Digite o primeiro inteiro:"))
num2 = int(input("Digite o segundo inteiro:"))
num3 = int(input("Digite o terceiro inteiro:"))
print(min(num1,num2,num3))
print((num1+num2+num3)-min(num1,num2,num3)-max(num1,num2,num3))
print(max(num1,num2,num3))

-- EXECUTION TIME:
0.137282
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
