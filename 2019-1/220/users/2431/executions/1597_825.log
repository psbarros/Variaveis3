== TEST (2019-03-24 12:15:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input())
a = math.pi*(r**2)
v = ((4/3)math.pi(r**3))

print(round(a,3))
print(round(v,3))


-- ERROR:
File "XXXX", line 8
    v = ((4/3)math.pi(r**3))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:19:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(math.pi*(r**2))
print((4/3)math.pi(r**3))




-- ERROR:
File "XXXX", line 8
    print((4/3)math.pi(r**3))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:19:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(math.pi*r**2)
print((4/3)math.pi*r**3)




-- ERROR:
File "XXXX", line 8
    print((4/3)math.pi*r**3)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:20:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(math.pi*r**2)
print((4/3)*math.pi*r**3)




-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:22:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(round((math.pi*r**2),3)
print(round((4/3)*math.pi*r**3),3)




-- ERROR:
File "XXXX", line 8
    print(round((4/3)*math.pi*r**3),3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:24:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(round((math.pi*r**2), 3)
print(round((4/3)*math.pi*r**3), 3)




-- ERROR:
File "XXXX", line 8
    print(round((4/3)*math.pi*r**3), 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:24:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(round((math.pi*r**2), 3)
print(round((4/3)*math.pi*r**3), 3)




-- ERROR:
File "XXXX", line 8
    print(round((4/3)*math.pi*r**3), 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:24:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(math.pi*r**2)
print((4/3)*math.pi*r**3)




-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:25:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
print(math.pi*r**2)
print((4/3)*math.pi*r**3)




-- EXECUTION TIME:
0.17675
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331
381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779
7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:25:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
a = (math.pi*r**2)
v = ((4/3)*math.pi*r**3)
print(round(a, 3))
print(round(v, 3))



-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:26:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

r = float(input("raio: "))
a = (math.pi*r**2)
v = ((4/3)*math.pi*r**3)
print(round(a, 3))
print(round(v, 3))



-- EXECUTION TIME:
0.124308
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
