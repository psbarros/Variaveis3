== SUBMITION (2019-05-01 20:30:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:))

if(b <= a):
	print("entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
	
-- EXECUTION TIME:
0.1415
-- ERROR:
  File "/home/codebench/codes/1689/1101/main.py", line 6
    b = float(input("digite um valor para b:))
                                             ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:30:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:))

if(b <= a):
	print("entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
	
-- ERROR:
File "XXXX", line 6
    b = float(input("digite um valor para b:))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:")

if(b <= a):
	print("entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
	
-- EXECUTION TIME:
0.159898
-- ERROR:
  File "/home/codebench/codes/1689/1101/main.py", line 8
    if(b <= a):
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:31:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:")

if(b <= a):
	print("entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
	
-- ERROR:
File "XXXX", line 8
    if(b <= a):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:32:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <= a):
	print("entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
	
-- EXECUTION TIME:
0.188773
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:32:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <= a):
	print("entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:32:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <= a):
	print("entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
	
-- EXECUTION TIME:
0.139807
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:36:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.217312
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:39:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <-a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >-a and x <- b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.199954
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:53:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x -float(input("digite um valor para x:"))
a -float(input("digite um valor para a:"))
b -float(input("digite um valor para b:"))

if(b <-a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >-a and x <- b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.182552
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 4, in <module>
    x -float(input())
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:57:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("digite um valor para x:"))
a =float(input("digite um valor para a:"))
b =float(input("digite um valor para b"))

if(b <=a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a anda x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.183959
-- ERROR:
  File "/home/codebench/codes/1689/1101/main.py", line 12
    elif( x >= a anda x <= b):
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:57:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("digite um valor para x:"))
a =float(input("digite um valor para a:"))
b =float(input("digite um valor para b"))

if(b <=a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a anda x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 12
    elif( x >= a anda x <= b):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:58:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("digite um valor para x:"))
a =float(input("digite um valor para a:"))
b =float(input("digite um valor para b:"))

if(b <=a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a anda x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.160939
-- ERROR:
  File "/home/codebench/codes/1689/1101/main.py", line 12
    elif( x >= a anda x <= b):
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:58:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("digite um valor para x:"))
a =float(input("digite um valor para a:"))
b =float(input("digite um valor para b:"))

if(b <=a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a anda x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 12
    elif( x >= a anda x <= b):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:59:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <=a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.145936
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:59:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <=a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:00:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <=a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.186169
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:01:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.149003
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.139696
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:42:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.117826
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1689/1101/main.py", line 5, in <module>
    a = float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:09:03) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if( con < 0 ):
	print("Entradas",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
-- EXECUTION TIME:
0.16207
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:11:48) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
-- EXECUTION TIME:
0.233945
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:11:53) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
-- EXECUTION TIME:
0.195696
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:12:06) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
-- EXECUTION TIME:
0.193199
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:19:40) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos"
-- EXECUTION TIME:
0.15446
-- ERROR:
  File "/home/codebench/codes/1689/1101/main.py", line 40
    
                            ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:19:44) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos"
-- EXECUTION TIME:
0.145861
-- ERROR:
  File "/home/codebench/codes/1689/1101/main.py", line 40
    
                            ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:20:02) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.17696
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:20:12) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.166575
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:20:28) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:21:09) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:21:27) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.221861
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:26:26) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.137602
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:26:29) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:26:49) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.162669
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:26:56) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.152665
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:27:02) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.183196
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:27:05) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:31:12) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.154299
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ (621.075, 2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:31:15) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.2458
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ (621.075, 2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:31:17) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.182177
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ (621.075, 2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:31:18) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.13225
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ (621.075, 2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:33:35) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.184504
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:33:36) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: ( R/I/C)")

if ( con < 0 ):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
elif ( tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and com <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif ( tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
-- EXECUTION TIME:
0.185961
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:15:30) 
-- CODE:
con=float(input("consumo de energia:"))
tipo=input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
elif(tipo=="R" and con <=500):
	preco=con*0.44
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(preco,2))
elif(tipo=="R" and con > 500):
	preco=con*0.65
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(preco,2))	
elif(tipo=="C" and con <=1000):
	preco=con*0.55
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(preco,2))	
elif(tipo=="C" and con >1000):
	preco=con*0.60
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(preco,2))	
elif(tipo=="I" and con <=5000):
	preco=con*0.55
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(preco,2))	
elif(tipo=="I" and con >5000):
	preco=con*0.60
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(preco,2))	
else:
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")

-- EXECUTION TIME:
0.175639
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
