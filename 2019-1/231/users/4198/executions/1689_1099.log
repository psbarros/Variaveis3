== TEST (2019-05-01 19:56:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:",a",",b",", c )
# Teste se as medidas correspondem as de um triangulo
if(a+b>c and b+c>a and c+a>b):
	if(a!=b and a!=c and b!=c):
		print("Tipo de triangulo: isosceles")
	else:
		(a==b and b==c and c==a)
		print("Tipo de triangulo: equilatero")
	else:
		print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    print("Entradas:",a",",b",", c )
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:57:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:",a, "," ,b "," , c )
# Teste se as medidas correspondem as de um triangulo
if(a+b>c and b+c>a and c+a>b):
	if(a!=b and a!=c and b!=c):
		print("Tipo de triangulo: isosceles")
	else:
		(a==b and b==c and c==a)
		print("Tipo de triangulo: equilatero")
	else:
		print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    print("Entradas:",a, "," ,b "," , c )
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:58:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if(a+b>c and b+c>a and c+a>b):
	if(a!=b and a!=c and b!=c):
		print("Tipo de triangulo: isosceles")
	else:
		(a==b and b==c and c==a)
		print("Tipo de triangulo: equilatero")
	else:
		print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 14
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:59:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if(a+b>c and b+c>a and c+a>b):
	if(a!=b and a!=c and b!=c):
		print("Tipo de triangulo: isosceles")
	else:
		(a==b and b==c and c==a)
		print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 14
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:01:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if(a+b>c and b+c>a and c+a>b):
	if(a!=b and a!=c and b!=c):
		print("Tipo de triangulo: isosceles")
	else:
		if(a==b and b==c and c==a):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:01:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if(a+b>c and b+c>a and c+a>b):
	if(a!=b and a!=c and b!=c):
		print("Tipo de triangulo: isosceles")
	else:
		if(a==b and b==c and c==a):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.153917
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:02:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a+b>c) and (b+c>a) and (c+a>b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: isosceles")
	else:
		if((a==b) and (b==c) and (c==a)):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:02:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a+b>c) and (b+c>a) and (c+a>b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: isosceles")
	else:
		if((a==b) and (b==c) and (c==a)):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.191342
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:03:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a+b>c) and (b+c>a) and (c+a>b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: isosceles")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:03:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a+b>c) and (b+c>a) and (c+a>b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: isosceles")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.194976
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:05:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a<b+c) and (b<c+a) and (c<a+b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: isosceles")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.172257
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:05:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a<b+c) and (b<c+a) and (c<a+b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: isosceles")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:05:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a<b+c) and (b<c+a) and (c<a+b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: isosceles")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: equilatero")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.268574
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:07:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input("Digite a medida do lado a: "))
b= float(input("Digite a medida do lado b: "))
c= float(input("Digite a medida do lado c: "))
print("Entradas:" ,a, "," ,b , "," , c )
# Teste se as medidas correspondem as de um triangulo
if((a<b+c) and (b<a+c) and (c<a+b)):
	if((a!=b) and (a!=c) and (b!=c)):
		print("Tipo de triangulo: escaleno")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: equilatero")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.127983
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
