== TEST (2019-03-21 21:56:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio = float(input("Digite o valor do raio: "))
pi3 = math.pi()
area = pi3*raio**2
volume = (4/3)pi3*raio**3
print(round(area,3))
print(round(volume,3))
-- ERROR:
File "XXXX", line 8
    volume = (4/3)pi3*raio**3
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:56:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio = float(input("Digite o valor do raio: "))
pi3 = math.pi()
area = pi3*raio**2
volume = (4/3)*pi3*raio**3
print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    pi3 = math.pi()
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 22:00:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio = float(input("Digite o valor do raio: "))
pi3 = math.pi
area = pi3*raio**2
volume = (4/3)*pi3*raio**3
print(round(area,3))
print(round(volume,3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 22:00:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio = float(input("Digite o valor do raio: "))
pi3 = math.pi
area = pi3*raio**2
volume = (4/3)*pi3*raio**3
print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.129415
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
