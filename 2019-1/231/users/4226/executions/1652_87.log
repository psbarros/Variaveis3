== TEST (2019-04-11 19:30:32) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b, a < c): #onde 'b' é o menor
	print(b)
else:
	if (c > b, c < a): #onde 'c' é o menor
		print(c)
	else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
788
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:31:01) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b, a < c): #onde 'b' é o menor
	print(b)
elif (c > b, c < a): #onde 'c' é o menor
		print(c)
	else:
		print(a) #'a' deve ser o menor então


-- ERROR:
File "XXXX", line 9
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:31:05) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b, a < c): #onde 'b' é o menor
	print(b)
elif (c > b, c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
788
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:31:26) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b, a < c): #onde 'b' é o menor
	print(b)
elif (c > b, c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
788
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:32:42) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c > b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
258
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:34:14) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:34:22) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:34:27) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:34:33) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- EXECUTION TIME:
0.169518
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
35
---- user output:
35
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
55
---- user output:
99
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
123
---- user output:
123
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:34:51) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:35:06) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:35:16) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (a > b) and (a < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
else:
		print(a) #'a' deve ser o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:36:42) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (b < a) and (b < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
elif (a < b) and (a < c):
		print(a) #onde 'a' é o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:36:51) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (b < a) and (b < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
elif (a < b) and (a < c):
		print(a) #onde 'a' é o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:36:59) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (b < a) and (b < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
elif (a < b) and (a < c):
		print(a) #onde 'a' é o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:37:08) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (b < a) and (b < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
elif (a < b) and (a < c):
		print(a) #onde 'a' é o menor então


-- OUTPUT:
35
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:37:14) 
-- CODE:
a = int(input("num. a: "))
b = int(input("num. b: "))
c = int(input("num. c: "))

if (b < a) and (b < c): #onde 'b' é o menor
	print(b)
elif (c < b) and (c < a): #onde 'c' é o menor
		print(c)
elif (a < b) and (a < c):
		print(a) #onde 'a' é o menor então


-- EXECUTION TIME:
0.226392
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
35
---- user output:
35
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
55
---- user output:
55
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
123
---- user output:
123
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
