== TEST (2019-03-26 08:53:15) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: ")
d1 = int(input())
d2 = int(input())
dano = (sqrt(5*d1) + pit**((d2)/3)
print(pdvi-dano)
-- ERROR:
File "XXXX", line 3
    d1 = int(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:53:47) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: ")
d1 = int(input())
d2 = int(input())
dano = (sqrt(5*d1) + pi**((d2)/3)
print(pdvi-dano)
-- ERROR:
File "XXXX", line 3
    d1 = int(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:54:09) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: ")
dp= int(input())
ds= int(input())
dano = (sqrt(5*d1) + pi**((d2)/3)
print(pdvi-dano)
-- ERROR:
File "XXXX", line 3
    dp= int(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:55:04) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: ")
d1 = int(input())
d2= int(input())
dano = (sqrt(5*d1) + pi**((d2)/3)
print(pdvi-dano)
-- ERROR:
File "XXXX", line 3
    d1 = int(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:56:51) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = (sqrt(5*d1) + pi**((d2)/3)
print(pdvi-dano)
-- ERROR:
File "XXXX", line 6
    print(pdvi-dano)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:57:22) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = (sqrt(5*d1) + pi**((d2)/3)
print(pdvi-dano)
-- ERROR:
File "XXXX", line 6
    print(pdvi-dano)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:57:36) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = (sqrt(5*d1) + pi**((d2)/3)

-- ERROR:
File "XXXX", line 6
    
                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:57:45) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = (sqrt(5*d1) + pi**((d2)/3)
-- ERROR:
File "XXXX", line 6
    
                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:59:24) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3)
-- ERROR:
File "XXXX", line 6
    
                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:59:36) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3)
-- ERROR:
File "XXXX", line 6
    
                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 08:59:55) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3)
-- ERROR:
File "XXXX", line 6
    
                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:00:03) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3)
-- ERROR:
File "XXXX", line 6
    
                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:09:40) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3)
-- ERROR:
File "XXXX", line 6
    
                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:36:03) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3) )
r = pdvi - dano 
print(r)
-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:36:34) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3) )
r = int(pdvi - dano) 
print(r)
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:36:57) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3) )
r = (pdvi - dano) 
print(r)
-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:38:57) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input())
d2 =int(input())
dano = ( sqrt(5*d1) + pi*(d2/3) )
r = (pdvi - dano) 
print(r)
-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:40:42) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input("Valor do dado 1: "))
d2 = int(input("Valor do dado 2 : "))
dano = int( sqrt(5*d1) + pi*(d2/3) )
r = (pdvi - dano) 
print(r)
-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 09:40:54) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input("Valor do dado 1: "))
d2 = int(input("Valor do dado 2 : "))
dano = int( sqrt(5*d1) + pi*(d2/3) )
r = (pdvi - dano) 
print(r)
-- EXECUTION TIME:
0.169998
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:41:00) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input("Valor do dado 1: "))
d2 = int(input("Valor do dado 2 : "))
dano = int( sqrt(5*d1) + pi*(d2/3) )
r = (pdvi - dano) 
print(r)
-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:41:08) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input("Valor do dado 1: "))
d2 = int(input("Valor do dado 2 : "))
dano = int( sqrt(5*d1) + pi*(d2/3) )
r = (pdvi - dano) 
print(r)
-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:43:14) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input("Valor do dado 1: "))
d2 = int(input("Valor do dado 2 : "))
dano = int( sqrt(5*d1) + pi*(d2/3) )
r = (pdvi - dano) 
print(r)
-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:45:00) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input("Valor do dado 1: "))
d2 = int(input("Valor do dado 2 : "))
dano = int( sqrt(5*d1) + pi**(d2/3) )
r = (pdvi - dano) 
print(r)
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 09:45:12) 
-- CODE:
from math import*
pdvi = int(input("Coloque os pontos de vida iniciais: "))
d1 = int(input("Valor do dado 1: "))
d2 = int(input("Valor do dado 2 : "))
dano = int( sqrt(5*d1) + pi**(d2/3) )
r = (pdvi - dano) 
print(r)
-- EXECUTION TIME:
0.31116
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
