== TEST (2019-05-15 14:11:40) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 if(idade<=0 || IMC<=0):
	print("Entradas: " idade "anos e IMC" IMC)
-- ERROR:
File "XXXX", line 3
    if(idade<=0 || IMC<=0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:12:09) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
	if(idade<=0 || IMC<=0):
		print("Entradas: " idade "anos e IMC" IMC)
-- ERROR:
File "XXXX", line 4
    if(idade<=0 || IMC<=0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:13:02) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
	if(idade<=0 || IMC<=0):
		print("Entradas: " idade "anos e IMC" IMC)
	else:
		print("Dados invalidos")
-- ERROR:
File "XXXX", line 4
    if(idade<=0 || IMC<=0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:13:42) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
	if(idade<=0):
		print("Entradas: " idade "anos e IMC" IMC)
	else:
		print("Dados invalidos")
-- ERROR:
File "XXXX", line 4
    if(idade<=0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:14:26) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
if idade<=0:
	print("Entradas: " idade "anos e IMC" IMC)
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 5
    print("Entradas: " idade "anos e IMC" IMC)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:14:38) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
if idade<=0 || IMC<=0:
	print("Entradas: " idade "anos e IMC" IMC)
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 4
    if idade<=0 || IMC<=0:
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:14:52) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
if (idade<=0 || IMC<=0):
	print("Entradas: " idade "anos e IMC" IMC)
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 4
    if (idade<=0 || IMC<=0):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:14:59) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
if (idade<=0 | IMC<=0):
	print("Entradas: " idade "anos e IMC" IMC)
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 5
    print("Entradas: " idade "anos e IMC" IMC)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:16:54) 
-- CODE:
idade=int(input("digite idade: "))
IMC=(int("digite IMC: "))
 
if (idade<=0 | IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    IMC=(int("digite IMC: "))
ValueError: invalid literal for int() with base 10: 'digite IMC: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:24) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 | IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
else:
	print("Dados invalidos")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (idade<=0 | IMC<=0):
TypeError: unsupported operand type(s) for |: 'int' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:43) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 | IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
else:
	print("Dados invalidos")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (idade<=0 | IMC<=0):
TypeError: unsupported operand type(s) for |: 'int' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:28:20) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 | IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
elif (idade<45 & IMC<22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z="Baixo"
	print('Risco',Z)
elif (idade<45 & IMC>=22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 & IMC<22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 & IMC>=22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Alto"
	print('Risco',Z)
else:
	print("Dados invalidos")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (idade<=0 | IMC<=0):
TypeError: unsupported operand type(s) for |: 'int' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:28:48) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 | IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
elif (idade<45 & IMC<22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z="Baixo"
	print('Risco',Z)
elif (idade<45 & IMC>=22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 & IMC<22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 & IMC>=22,0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Alto"
	print('Risco',Z)
else:
	print("Dados invalidos")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (idade<=0 | IMC<=0):
TypeError: unsupported operand type(s) for |: 'int' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:33:20) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z="Baixo"
	print('Risco',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Alto"
	print('Risco',Z)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  0 anos e IMC 0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:33:40) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z="Baixo"
	print('Risco',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Alto"
	print('Risco',Z)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  0 anos e IMC 0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:34:16) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z="Baixo"
	print('Risco',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Alto"
	print('Risco',Z)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  0 anos e IMC 0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:34:40) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,'anos e IMC', IMC)
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z="Baixo"
	print('Risco',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Medio"
	print('Risco',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,'anos e IMC', IMC)
	Z= "Alto"
	print('Risco',Z)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.161733
-- TEST CASE 1:
---- input:
0
0
---- correct output:
Entradas: 0 anos e IMC 0.0
Dados invalidos
---- user output:
Entradas:  0 anos e IMC 0.0
-- TEST CASE 2:
---- input:
25
25
---- correct output:
Entradas: 25 anos e IMC 25.0
Risco: Medio
---- user output:
Entradas:  25 anos e IMC 25.0
Risco Medio
-- TEST CASE 3:
---- input:
50
25
---- correct output:
Entradas: 50 anos e IMC 25.0
Risco: Alto
---- user output:
Entradas:  50 anos e IMC 25.0
Risco Alto
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:35:56) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z="Baixo"
	print('Risco: ',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Alto"
	print('Risco: ',Z)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  0  anos e IMC  0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:36:16) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z="Baixo"
	print('Risco: ',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Alto"
	print('Risco: ',Z)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.15813
-- TEST CASE 1:
---- input:
0
0
---- correct output:
Entradas: 0 anos e IMC 0.0
Dados invalidos
---- user output:
Entradas:  0  anos e IMC  0.0
-- TEST CASE 2:
---- input:
25
25
---- correct output:
Entradas: 25 anos e IMC 25.0
Risco: Medio
---- user output:
Entradas:  25  anos e IMC  25.0
Risco:  Medio
-- TEST CASE 3:
---- input:
50
25
---- correct output:
Entradas: 50 anos e IMC 25.0
Risco: Alto
---- user output:
Entradas:  50  anos e IMC  25.0
Risco:  Alto
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:36:23) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z="Baixo"
	print('Risco: ',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Alto"
	print('Risco: ',Z)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  0  anos e IMC  0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:37:31) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	print("Dados invalidos")
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z="Baixo"
	print('Risco: ',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Alto"
	print('Risco: ',Z)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  0  anos e IMC  0.0
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:37:42) 
-- CODE:
idade=int(input("digite idade: "))
IMC=float(input("digite IMC: "))
 
if (idade<=0 or IMC<=0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	print("Dados invalidos")
elif (idade<45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z="Baixo"
	print('Risco: ',Z)
elif (idade<45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC<22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Medio"
	print('Risco: ',Z)
elif (idade>=45 and IMC>=22.0):
	print('Entradas: ',idade,' anos e IMC ', IMC)
	Z= "Alto"
	print('Risco: ',Z)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.209232
-- TEST CASE 1:
---- input:
0
0
---- correct output:
Entradas: 0 anos e IMC 0.0
Dados invalidos
---- user output:
Entradas:  0  anos e IMC  0.0
Dados invalidos
-- TEST CASE 2:
---- input:
25
25
---- correct output:
Entradas: 25 anos e IMC 25.0
Risco: Medio
---- user output:
Entradas:  25  anos e IMC  25.0
Risco:  Medio
-- TEST CASE 3:
---- input:
50
25
---- correct output:
Entradas: 50 anos e IMC 25.0
Risco: Alto
---- user output:
Entradas:  50  anos e IMC  25.0
Risco:  Alto
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
