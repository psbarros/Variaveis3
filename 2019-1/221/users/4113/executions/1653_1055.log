== TEST (2019-04-12 14:50:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = 20
R=(vo)**2*sin(2*a)/g
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 14:53:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
R=(vo)**2*sin(2*a)/g
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 14:53:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
R=(vo)**2*sin(2*a)/g
-- EXECUTION TIME:
0.14882
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:

-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 14:59:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if (R=(vo)**2*sin(2*a)/g)
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if (R=(vo)**2*sin(2*a)/g)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:00:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if (R=(vo)**2*sin(2*a)/g):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if (R=(vo)**2*sin(2*a)/g):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 15:00:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if (R=(vo)**2*sin(2*a)/g):
	print(sim)
else:
	print(nao)
 
-- EXECUTION TIME:
0.143519
-- ERROR:
  File "/home/codebench/codes/1653/1055/main.py", line 10
    if (R=(vo)**2*sin(2*a)/g):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:00:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if (R=(vo)**2*sin(2*a)/g):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if (R=(vo)**2*sin(2*a)/g):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:10:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if (R=(vo)**2*sin(2*a)/g):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if (R=(vo)**2*sin(2*a)/g):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:13:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if ((R=(vo)**2*sin(2*a))/g):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if ((R=(vo)**2*sin(2*a))/g):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:14:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if (((R=(vo)**2)*(sin(2*a))/g)):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if (((R=(vo)**2)*(sin(2*a))/g)):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:16:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if R=(((vo)**2)*(sin(2*a))/g):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if R=(((vo)**2)*(sin(2*a))/g):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:16:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if R=((vo**2)*(sin(2*a))/g):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if R=((vo**2)*(sin(2*a))/g):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:18:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())
if (((R=((vo)**2)*(sin(2*a))/g)
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 10
    if (((R=((vo)**2)*(sin(2*a))/g)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:24:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())

if (((R=((vo)**2)*(sin(2*a))/g)
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 11
    if (((R=((vo)**2)*(sin(2*a))/g)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:45:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())

if (((R==((vo)**2)*(sin(2*a))/g)
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 12
    print(sim)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:46:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())

if (((R==((vo)**2)*(sin(2*a))/g)
print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 12
    print(sim)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:46:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())

if (((R==((vo)**2)*(sin(2*a))/g)
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 12
    print(sim)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:47:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = float(input())
g = 9.8
d = float(input())

if (((R==((vo)**2)*(sin(2*a))/g):
	print(sim)
else:
	print(nao)
 
-- ERROR:
File "XXXX", line 11
    if (((R==((vo)**2)*(sin(2*a))/g):
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 16:46:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = radians(float(input()))
g = 9.8
d = float(input())

R=((vo*vo)*sin(2*a))/g
if abs(d-r) > 0.1:
	print("nao")
else:
	print("sim")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if abs(d-r) > 0.1:
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 16:48:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = radians(float(input()))
g = 9.8
d = float(input())

R=((vo*vo)*sin(2*a))/g
if abs(d-r) > 0.1:
	print("nao")
else:
	print("sim")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if abs(d-r) > 0.1:
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 16:49:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = radians(float(input()))
g = 9.8
d = float(input())

R=((vo*vo)*sin(2*a))/g
if abs(d-R) > 0.1:
	print("nao")
else:
	print("sim")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 16:49:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import sin
from math import radians
vo = float(input())
a = radians(float(input()))
g = 9.8
d = float(input())

R=((vo*vo)*sin(2*a))/g
if abs(d-R) > 0.1:
	print("nao")
else:
	print("sim")
-- EXECUTION TIME:
0.12531
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
