== TEST (2019-03-22 08:23:06) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:23:10) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.141546
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:25:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)

-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:25:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)

-- EXECUTION TIME:
0.129217
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:26:34) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:26:36) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.139812
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:26:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num.)
-- ERROR:
File "XXXX", line 7
    print(num.)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:27:00) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num.)
-- EXECUTION TIME:
0.12834
-- ERROR:
  File "/home/codebench/codes/1579/2897/main.py", line 7
    print(num.)
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:28:15) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(num.)
-- ERROR:
File "XXXX", line 7
    print(num.)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:28:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(num.)
-- EXECUTION TIME:
0.290915
-- ERROR:
  File "/home/codebench/codes/1579/2897/main.py", line 7
    print(num.)
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:28:37) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:28:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.125596
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:29:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:29:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.155855
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:30:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print()
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:30:55) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print()
-- EXECUTION TIME:
0.128555
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:

-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:31:02) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print()
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:31:04) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print()
-- EXECUTION TIME:
0.120212
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:

-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:31:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print( num )
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:31:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print( num )
-- EXECUTION TIME:
0.123152
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:32:02) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(int(input("3:")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:32:04) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3:"))

# Impressao do dobro do numero
print(int(input("3:")))
-- EXECUTION TIME:
0.226503
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1579/2897/main.py", line 7, in <module>
    print(int(input()))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:32:44) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:32:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.211148
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 08:34:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 08:34:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("3: "))

# Impressao do dobro do numero
print(2*num)
-- EXECUTION TIME:
0.157005
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
