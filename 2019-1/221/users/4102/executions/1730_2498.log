== TEST (2019-05-14 21:40:47) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))
conta = 0
contb = 0

while(A < B):
	anoA = (A * (1+(pa/100)))
	anoB = (B * (1+(pb/100)))
	A = A+1
print(A)
-- OUTPUT:
580000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:42:39) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))
conta = 0
contb = 0

while(A < B):
	anoA = (A * (1+(pa/100)))
	anoB = (B * (1+(pb/100)))
	A = A + 1
print(A)
-- OUTPUT:
580000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:43:38) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))
conta = 0

while(A < B):
	anoA = (A * (1+(pa/100)))
	anoB = (B * (1+(pb/100)))
   conta = conta + 1
print(conta)
-- ERROR:
File "XXXX", line 10
    conta = conta + 1
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:44:31) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))
cont = 0

while(A < B):
	anoA = (A * (1+(pa/100)))
	anoB = (B * (1+(pb/100)))
   cont = cont + 1
print(cont)
-- ERROR:
File "XXXX", line 10
    cont = cont + 1
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:45:06) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))
cont = 0

while(A < B):
	anoA = (A * (1+(pa/100)))
	anoB = (B * (1+(pb/100)))
	cont = (cont + 1)
print(cont)
-- ERROR:
File "XXXX", line 10
    cont = cont + 1
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:48:23) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))

cont = 0

while(A < B):
	anoA = (A * (pa/100))
	A = A + anoA
	anoB = (B * (pb/100))
	B = B = anoB
	cont = (cont + 1)
print(cont)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:48:54) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))

cont = 0

while(A < B):
	anoA = (A * (pa/100))
	A = A + anoA
	anoB = (B * (pb/100))
	B = B = anoB
	cont = cont + 1
print(cont)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:55:12) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))

cont = 0

while(A < B):
	anoA = (A * (pa/100))
	A = A + anoA
	anoB = (B * (pb/100))
	B = B + anoB
	cont = cont + 1
print(cont)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 21:55:30) 
-- CODE:
A = int(input("numero de habitantes A: "))
B = int(input("numero de habitantes B: "))
pa = float(input("percentual de crescimento A: "))
pb = float(input("percentual de crescimento B: "))

cont = 0

while(A < B):
	anoA = (A * (pa/100))
	A = A + anoA
	anoB = (B * (pb/100))
	B = B + anoB
	cont = cont + 1
print(cont)
-- EXECUTION TIME:
0.288894
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
