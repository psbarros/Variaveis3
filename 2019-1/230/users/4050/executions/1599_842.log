== TEST (2019-03-25 16:28:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =float(3+1+4+1)
print(var)
-- OUTPUT:
9.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:28:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =float(3+1+4+1)
print(var)
-- EXECUTION TIME:
0.128577
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
9.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 16:13:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3 = t%10
t=t//10
a4=t%10
t=t//10
print(a+a1+a2+a3+a4)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(a+a1+a2+a3+a4)
NameError: name 'a1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 16:14:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 16:15:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- EXECUTION TIME:
0.171748
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:03:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- EXECUTION TIME:
0.142843
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:58:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:58:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:58:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:58:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:58:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:58:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:59:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 10:59:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t = int(input("Digite um valor: "))
a=t%10
t=t//10
a2=t%10
t=t//10
a3=t%10
t=t//10
a4=t%10
t=t//10
print(a+a2+a3+a4)
-- EXECUTION TIME:
0.153587
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
