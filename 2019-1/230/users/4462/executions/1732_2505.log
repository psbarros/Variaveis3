== TEST (2019-05-14 13:57:15) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
2.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 13:57:35) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 13:57:44) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- EXECUTION TIME:
0.14631
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
3.3012952459
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.3011348047
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
2.249088823
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 13:57:45) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 13:58:28) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
2.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 13:59:15) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont >= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 13:59:29) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 13:59:56) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))+(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
8.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:00:11) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))+(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
7.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:01:47) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:02:17) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(k, 10))
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:02:38) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:03:33) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 0
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
3.3012988447
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:04:37) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 2
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
2.5091780011
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:05:24) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 2
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(1/factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
333370679.5552667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:06:57) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(1/factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
21247296.597745486
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 14:07:11) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- EXECUTION TIME:
0.18385
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
3.3012952459
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.3011348047
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
2.249088823
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:07:54) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2

print(round(sen, 10))
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:08:22) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2
	print(round(sen, 10))
-- OUTPUT:
2.5707963268
3.2167604243
3.2964530505
3.3011348047
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:08:46) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:08:57) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:09:36) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 0
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
2.3012988447
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:10:37) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d += 1 + 2
print(round(sen, 10))
	
-- OUTPUT:
2.8291728478
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:12:02) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))-(angulo**d)/(factorial(d))
	cont +=1
	d += 1 + 2
print(round(sen, 10))
	
-- OUTPUT:
4.1708271522
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:12:21) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))/(angulo**d)/(factorial(d))
	cont +=1
	d += 1 + 2
print(round(sen, 10))
	
-- OUTPUT:
1.6434721723
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:12:47) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))/(angulo**d)/(factorial(d))
	cont +=1
	d += 1 + 2
print(round(sen, 10))
	
-- OUTPUT:
0.6434721723
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:13:12) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))/(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
0.680501678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:14:14) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 0
d = 1
while(cont <= k):
	sen += -((-1**cont))/(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
1.6805016782
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:14:31) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))/(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
1.680501678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:15:48) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 1
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))*(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
3.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:16:01) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))/(angulo**d)/(factorial(d))
	cont +=1
	d +=2
print(round(sen, 10))
	
-- OUTPUT:
0.680501678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:16:42) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1**cont))/(angulo**d)/(factorial(d))
	cont +=1
	d +=2
	
print(round(sen, 10))
	
-- OUTPUT:
0.680501678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 14:19:11) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1)**cont)*(angulo**d)/(factorial(d))
	cont +=1
	d +=2
	
print(round(sen, 10))
	
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 14:19:18) 
-- CODE:
from math import*
angulo = eval(input("angulo: "))
k = int(input("numero k de termos da serie: "))

sen = 0
cont = 1
d = 1
while(cont <= k):
	sen += -((-1)**cont)*(angulo**d)/(factorial(d))
	cont +=1
	d +=2
	
print(round(sen, 10))
	
-- EXECUTION TIME:
0.159791
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
