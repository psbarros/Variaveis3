== TEST (2019-06-05 17:16:35) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
print(qtd_falta)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:17:17) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
print(qtd_falta)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 17:17:43) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
print(qtd_falta)


-- EXECUTION TIME:
1.30797
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[3, 0, 0, 3, 4, 6]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[1, 2, 4, 5, 5, 8]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[2, 1, 3, 1, 2, 4]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:17:46) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
print(qtd_falta)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:17:56) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
print(qtd_falta)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 17:20:10) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]


for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = i/len(faltas)*100

vet = np.array(qtd_falta,dtype=np.int)
print(vet)
	
	



-- EXECUTION TIME:
1.21751
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[3 0 0 3 4 6]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[1 2 4 5 5 8]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[2 1 3 1 2 4]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:20:14) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]


for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = i/len(faltas)*100

vet = np.array(qtd_falta,dtype=np.int)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 17:20:29) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]


for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = i/len(faltas)*100

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- EXECUTION TIME:
0.939338
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[3. 0. 0. 3. 4. 6.]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[1. 2. 4. 5. 5. 8.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[2. 1. 3. 1. 2. 4.]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:20:31) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]


for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = i/len(faltas)*100

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:22:18) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = (i/len(faltas))*100

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 17:24:32) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = (i/len(faltas))*1000

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- EXECUTION TIME:
0.831277
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[3. 0. 0. 3. 4. 6.]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[1. 2. 4. 5. 5. 8.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[2. 1. 3. 1. 2. 4.]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:24:34) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = (i/len(faltas))*1000

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:26:23) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
for i in qtd_falta:
	i = (i*100)/len(faltas)

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:27:59) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
count = 0

while(count < len(qtd_falta)):
	qtd_falta[count] = (qtd_falta[count]/len(falta))*100

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:28:17) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
count = 0

while(count < len(qtd_falta)):
	qtd_falta[count] = (qtd_falta[count]/len(faltas))*100

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 17:28:38) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
count = 0

while(count < len(qtd_falta)):
	qtd_falta[count] = (qtd_falta[count]/len(faltas))*100
	count = count + 1

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 17:28:52) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
count = 0

while(count < len(qtd_falta)):
	qtd_falta[count] = (qtd_falta[count]/len(faltas))*100
	count = count + 1

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- EXECUTION TIME:
1.01292
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.75  0.    0.   18.75 25.   37.5 ]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.38461538  7.69230769 23.07692308  7.69230769 15.38461538 30.76923077]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 17:30:06) 
-- CODE:
import numpy as np

faltas = eval(input())
qtd_falta = [0,0,0,0,0,0]

for i in faltas:
	qtd_falta[i-2] = qtd_falta[i-2] + 1
	
count = 0

while(count < len(qtd_falta)):
	qtd_falta[count] = round((qtd_falta[count]/len(faltas))*100,1)
	count = count + 1

vet = np.array(qtd_falta,dtype=np.float)
print(vet)
	
	



-- EXECUTION TIME:
0.791623
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
