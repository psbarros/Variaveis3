== TEST (2019-06-23 20:24:31) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((shape(m1)[0], shape(m1)[1]), dtype = int)

for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:25:22) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((shape(m1)[0], shape(m1)[1]), dtype = int)

for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
1.17079
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:25:33) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((shape(m1)[0], shape(m1)[1]), dtype = int)

for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
1.10117
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:25:41) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((shape(m1)[0], shape(m1)[1]), dtype = int)

for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
1.16983
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:25:55) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((shape(m1)[0], shape(m1)[1]), dtype = int)

for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
1.09814
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:28:32) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((shape(m1)[0], shape(m1)[1]), dtype = int)

for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:28:57) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((shape(m1)[0], shape(m1)[1]), dtype = int)

for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
1.11673
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:30:33) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

for j in range(4):
	for i in range(4):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:31:11) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

for j in range(4):
	for i in range(4):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
1.19764
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:31:17) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

for j in range(4):
	for i in range(4):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
0.965066
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:31:27) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

for j in range(4):
	for i in range(4):
		m2[i, j] = m1[-1-i, j]

print(m2)
-- EXECUTION TIME:
0.909625
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:36:22) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

for j in range(4):
	for i in range(4):
		m2[i, j] = m1[i, j]
	m2[i, j] = sorted(m2[i, j], reverse = True)

print(m2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:37:07) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

for j in range(4):
	for i in range(4):
		m2[i, j] = m1[-1 - i, j]	

print(m2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:37:18) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

for j in range(4):
	for i in range(4):
		m2[i, j] = m1[-1 - i, j]	

print(m2)
-- EXECUTION TIME:
0.930135
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[1 4 4 3]
 [2 3 3 3]
 [3 2 2 3]
 [4 1 1 3]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:43:10) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

aux = zeros((4, 4), dtype = int)
print(aux)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:50:04) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

aux = zeros((4, 4), dtype = int)
for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		aux[i, j] = m1[i, j]
	aux[:, j] = sorted(aux[:, j], reverse = True)
print(aux)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:50:32) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz (4 x 4) cujas colunas estao ordenadas de forma crescente: ")))
m2 = zeros((4, 4), dtype = int)

aux = zeros((4, 4), dtype = int)
for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		aux[i, j] = m1[i, j]
	aux[:, j] = sorted(aux[:, j], reverse = True)
print(aux)


-- EXECUTION TIME:
0.997656
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[4 4 4 3]
 [3 3 3 3]
 [2 2 2 3]
 [1 1 1 3]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:54:57) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz cujas colunas estao ordenadas de forma crescente: ")))

aux = zeros((shape(m1), dtype = int)
for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		aux[i, j] = m1[i, j]
	aux[:, j] = sorted(aux[:, j], reverse = True)
print(aux)


-- ERROR:
File "XXXX", line 5
    aux = zeros((shape(m1), dtype = int)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 20:55:20) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz cujas colunas estao ordenadas de forma crescente: ")))

aux = zeros(shape(m1), dtype = int)
for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		aux[i, j] = m1[i, j]
	aux[:, j] = sorted(aux[:, j], reverse = True)
print(aux)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:55:36) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz cujas colunas estao ordenadas de forma crescente: ")))

aux = zeros(shape(m1), dtype = int)
for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		aux[i, j] = m1[i, j]
	aux[:, j] = sorted(aux[:, j], reverse = True)
print(aux


-- EXECUTION TIME:
0.557868
-- ERROR:
  File "/home/codebench/codes/1841/2603/decrescente.py", line 12
    
    ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 20:55:41) 
-- CODE:
from numpy import*

m1 = array(eval(input("Insira uma matriz cujas colunas estao ordenadas de forma crescente: ")))

aux = zeros(shape(m1), dtype = int)
for j in range(shape(m1)[1]):
	for i in range(shape(m1)[0]):
		aux[i, j] = m1[i, j]
	aux[:, j] = sorted(aux[:, j], reverse = True)
print(aux)


-- EXECUTION TIME:
0.987577
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[4 4 4 3]
 [3 3 3 3]
 [2 2 2 3]
 [1 1 1 3]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
