== TEST (2019-05-12 22:32:24) 
-- CODE:
hab_cdd_a = int(input("habitantes da cidade A: "))
hab _cdd_b = int(input("habitantes da cidade B: "))
percentual_a = float(input("percentual anual da cidade A: "))
percentual_b = float(input("percentual anual da cidade B: "))

ano = 0

while = (hab_cdd_a < hab_cdd_b):
	hab_cdd_a = hab_cdd_a + (percentual_a / 100) * hab_cdd_a
	hab_cdd_b = hab_cdd_b + (percentual_b / 100) * hab_cdd_b
	
	ano = ano + 1
	
	print(ano)
-- ERROR:
File "XXXX", line 2
    hab _cdd_b = int(input())
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 22:32:30) 
-- CODE:
hab_cdd_a = int(input("habitantes da cidade A: "))
hab _cdd_b = int(input("habitantes da cidade B: "))
percentual_a = float(input("percentual anual da cidade A: "))
percentual_b = float(input("percentual anual da cidade B: "))

ano = 0

while = (hab_cdd_a < hab_cdd_b):
	hab_cdd_a = hab_cdd_a + (percentual_a / 100) * hab_cdd_a
	hab_cdd_b = hab_cdd_b + (percentual_b / 100) * hab_cdd_b
	
	ano = ano + 1
	
	print(ano)
-- EXECUTION TIME:
0.300159
-- ERROR:
  File "/home/codebench/codes/1732/2498/main.py", line 2
    hab _cdd_b = int(input())
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 22:32:57) 
-- CODE:
hab_cdd_a = int(input("habitantes da cidade A: "))
hab_cdd_b = int(input("habitantes da cidade B: "))
percentual_a = float(input("percentual anual da cidade A: "))
percentual_b = float(input("percentual anual da cidade B: "))

ano = 0

while = (hab_cdd_a < hab_cdd_b):
	hab_cdd_a = hab_cdd_a + (percentual_a / 100) * hab_cdd_a
	hab_cdd_b = hab_cdd_b + (percentual_b / 100) * hab_cdd_b
	
	ano = ano + 1
	
	print(ano)
-- EXECUTION TIME:
0.3196
-- ERROR:
  File "/home/codebench/codes/1732/2498/main.py", line 8
    while = (hab_cdd_a < hab_cdd_b):
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 22:33:50) 
-- CODE:
hab_cdd_a = int(input("habitantes da cidade A: "))
hab_cdd_b = int(input("habitantes da cidade B: "))
percentual_a = float(input("percentual anual da cidade A: "))
percentual_b = float(input("percentual anual da cidade B: "))

ano = 0

while (hab_cdd_a < hab_cdd_b):
	hab_cdd_a = hab_cdd_a + (percentual_a / 100) * hab_cdd_a
	hab_cdd_b = hab_cdd_b + (percentual_b / 100) * hab_cdd_b
	
	ano = ano + 1
	
	print(ano)
-- EXECUTION TIME:
0.277709
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
habitantes da cidade A: habitantes da cidade B: percentual anual da cidade A: percentual anual da cidade B: 1
2
3
4
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
habitantes da cidade A: habitantes da cidade B: percentual anual da cidade A: percentual anual da cidade B: 1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
habitantes da cidade A: habitantes da cidade B: percentual anual da cidade A: percentual anual da cidade B: 1
2
3
4
5
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 22:34:34) 
-- CODE:
hab_cdd_a = int(input("habitantes da cidade A: "))
hab_cdd_b = int(input("habitantes da cidade B: "))
percentual_a = float(input("percentual anual da cidade A: "))
percentual_b = float(input("percentual anual da cidade B: "))

ano = 0

while (hab_cdd_a < hab_cdd_b):
	hab_cdd_a = hab_cdd_a + (percentual_a / 100) * hab_cdd_a
	hab_cdd_b = hab_cdd_b + (percentual_b / 100) * hab_cdd_b
	
	ano = ano + 1
	
print(ano)
-- EXECUTION TIME:
0.224415
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
