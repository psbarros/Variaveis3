== TEST (2019-06-26 08:55:59) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros(i,j, dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[i,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 08:58:03) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[i,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 08:58:41) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[i,:])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 08:58:53) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[i,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:02:27) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

print(max(mi[2:2]))

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[i,:])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:02:35) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

print(max(mi[:,2]))

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[i,:])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:03:18) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

print(max(mi[2,:]))

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[i,:])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:03:44) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

print(max(mi[2,:]))

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:06:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
			
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:14:24) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:16:41) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:21:31) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			mi[i,j] = 0
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:21:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for i in range(i):
	for j in range(j):
		if(mi[i,j] == max(mi[:,j])):
			base[i,j] += mi[i,j]
			print(base)
			mi[i,j] = 0
print(base)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:30:24) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
BaseVec = zeros((i, dtype=int)
BaseMatrix = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		BaseVec = sorted(mi[i,:], reverse=True)
		BaseMatrix[i,j] += base[i]
					 
print(BaseMatrix)
	
-- ERROR:
File "XXXX", line 11
    BaseVec = zeros((i, dtype=int)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:30:33) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
BaseVec = zeros(i, dtype=int)
BaseMatrix = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		BaseVec = sorted(mi[i,:], reverse=True)
		BaseMatrix[i,j] += base[i]
					 
print(BaseMatrix)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:30:46) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
BaseVec = zeros(i, dtype=int)
BaseMatrix = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		BaseVec = sorted(mi[i,:], reverse=True)
		BaseMatrix[i,j] += Base[i]
					 
print(BaseMatrix)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:30:55) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
BaseVec = zeros(i, dtype=int)
BaseMatrix = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		BaseVec = sorted(mi[i,:], reverse=True)
		BaseMatrix[i,j] += BaseVec[i]
					 
print(BaseMatrix)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:33:27) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
BaseMatrix = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		base[i,j] += mi[i,j]
	base[:,j] = sorted(mi[i,:], reverse=True)				 
print(base)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:33:35) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		base[i,j] += mi[i,j]
	base[:,j] = sorted(mi[i,:], reverse=True)				 
print(base)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 09:33:42) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		base[i,j] += mi[i,j]
	base[:,j] = sorted(mi[i,:], reverse=True)				 
print(base)
	
-- EXECUTION TIME:
1.0299
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 3 2 1]
 [4 3 2 1]
 [4 3 2 1]
 [4 3 2 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[4 3 3 4]
 [4 3 3 3]
 [3 3 2 1]
 [1 2 2 1]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:33:48) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		base[i,j] += mi[i,j]
	base[:,j] = sorted(mi[i,:], reverse=True)				 
print(base)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 09:34:16) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		base[i,j] += mi[i,j]
	base[:,j] = sorted(mi[:,j], reverse=True)				 
print(base)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 09:34:23) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Entries

mi = array(eval(input("Insert desired matrix:")))

# Definitions

i,j = shape(mi)
base = zeros((i,j), dtype=int)

# Processing

for j in range(j):
	for i in range(i):
		base[i,j] += mi[i,j]
	base[:,j] = sorted(mi[:,j], reverse=True)				 
print(base)
	
-- EXECUTION TIME:
1.10856
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[4 4 4 3]
 [3 3 3 3]
 [2 2 2 3]
 [1 1 1 3]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
