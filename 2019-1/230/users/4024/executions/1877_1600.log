== TEST (2019-07-03 16:03:39) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))


for i in (size(vet)):
	if(vet[i]>80):
		custo = custo + vet[i]/15
print(custo)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:03:52) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in (size(vet)):
	if(vet[i]>80):
		custo = custo + vet[i]/15
print(custo)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:04:21) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in (size(vet)):
	if(vet[i]>80):
		custo = custo + vet[i]/15
print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:05:15) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in range(0,vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15
print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 16:05:39) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in range(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15
print(round(custo,2))
	
-- EXECUTION TIME:
1.20935
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1877/1600/main.py", line 6, in <module>
    for i in range(vet):
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 16:05:47) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in range(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15
		print(round(custo,2))
	
-- EXECUTION TIME:
0.994194
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1877/1600/main.py", line 6, in <module>
    for i in range(vet):
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:05:48) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in range(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15
		print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:05:52) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in range(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15
		print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 16:05:53) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = 0 
for i in range(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15
		print(round(custo,2))
	
-- EXECUTION TIME:
1.14009
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1877/1600/main.py", line 6, in <module>
    for i in range(vet):
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:07:20) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = zeros(vet, dtype=float)
for i in range(vet):
	if(vet[i]>80):
		custo = vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:08:04) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = zeros(vet, dtype=float)
for i in range(vet):
	if(vet[i]>80):
		custo[i] = vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:08:46) 
-- CODE:
from numpy import * 

vet = array(eval(input(":")))

custo = zeros(vet, dtype=float)
for i in range(0,vet):
	if(vet[i]>80):
		custo[i] = vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:09:02) 
-- CODE:
from numpy import * 
from math import * 
vet = array(eval(input(":")))

custo = zeros(vet, dtype=float)
for i in range(0,vet):
	if(vet[i]>80):
		custo[i] = vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:14:24) 
-- CODE:
from numpy import * 
from math import * 
vet = array(eval(input(":")))

#custo = zeros(vet, dtype=float)
for i in range(0,vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:14:59) 
-- CODE:
from numpy import * 
from math import * 
vet = array(eval(input(":")))

#custo = zeros(vet, dtype=float)
for i in size(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:16:51) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

#custo = zeros(vet, dtype=float)
for i in size(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:17:09) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

#custo = zeros(vet, dtype=float)
for i in range(vet):
	if(vet[i]>80):
		custo = custo + vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:18:01) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(vet, dtype=float)
for i in range(vet):
	if(vet[i]>80):
		custo[i] =  vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:18:26) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(vet):
	if(vet[i]>80):
		custo[i] =  vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:18:46) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(vet, dtype = float)
for i in range(vet):
	if(vet[i]>80):
		custo[i] =  vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:20:11) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(vet):
	if(vet[i]>80):
		custo[i] =  vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:21:50) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] =  vet[i]/15

print(custo)		
		#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:25:23) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] =  (vet[i]*15)/100
#for i in range(size(custo)):
	
	
print(custo)
		
#print(round(custo,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:27:50) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] =  (vet[i]*15)/100
for i in range(size(custo)):
	b = sum(custo[:,i])
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:28:19) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] =  (vet[i]*15)/100
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 16:28:31) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] =  (vet[i]*15)/100
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- EXECUTION TIME:
1.22217
-- TEST CASE 1:
---- input:
[11.32,40.2,32,0]
---- correct output:
83.52
---- user output:
0.0
-- TEST CASE 2:
---- input:
[32,44,32.1,43.2]
---- correct output:
151.3
---- user output:
0.0
-- TEST CASE 3:
---- input:
[23,2,1]
---- correct output:
26
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:29:00) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] =  (vet[i]*15)/100
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:33:08) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - (vet[i]*15)/100
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:33:46) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - (vet[i])/0.15
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:34:01) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])/0.15)
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:34:23) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 16:34:38) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- EXECUTION TIME:
0.98992
-- TEST CASE 1:
---- input:
[11.32,40.2,32,0]
---- correct output:
83.52
---- user output:
0.0
-- TEST CASE 2:
---- input:
[32,44,32.1,43.2]
---- correct output:
151.3
---- user output:
0.0
-- TEST CASE 3:
---- input:
[23,2,1]
---- correct output:
26
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:34:50) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
for i in range(size(custo)):
	b = sum(custo)
	
#print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:35:24) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
#for i in range(size(custo)):
#	b = sum(custo)
print(custo)	
#print(custo)
		
#print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:35:40) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
#for i in range(size(custo)):
#	b = sum(custo)
print(custo)	
#print(custo)
		
#print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:36:00) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
#for i in range(size(custo)):
#	b = sum(custo)
print(custo)	
#print(custo)
		
#print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:38:21) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
for i in range(size(custo)):
	b = sum(custo)
	
print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:41:20) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
	else:
		custo[i] = vet[i]
for i in range(size(custo)):
	b = sum(custo)
	
print(custo)
		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 16:41:31) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
	else:
		custo[i] = vet[i]
for i in range(size(custo)):
	b = sum(custo)
	

		
print(round(b,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 16:41:39) 
-- CODE:
from numpy import * 
from math import * 
from numpy.linalg import *


vet = array(eval(input(":")))

custo = zeros(size(vet), dtype = float)
for i in range(size(vet)):
	if(vet[i]>80):
		custo[i] = vet[i] - ((vet[i])*0.15)
	else:
		custo[i] = vet[i]
for i in range(size(custo)):
	b = sum(custo)
	

		
print(round(b,2))
	
-- EXECUTION TIME:
1.12644
-- TEST CASE 1:
---- input:
[11.32,40.2,32,0]
---- correct output:
83.52
---- user output:
83.52
-- TEST CASE 2:
---- input:
[32,44,32.1,43.2]
---- correct output:
151.3
---- user output:
151.3
-- TEST CASE 3:
---- input:
[23,2,1]
---- correct output:
26
---- user output:
26.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
